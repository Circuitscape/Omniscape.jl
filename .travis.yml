language: julia

env:
  - JULIA_NUM_THREADS=2
  
os:
  - linux
  - osx
  - windows

julia:
  - 1.3
  - nightly

matrix:
  allow_failures:
    - julia: nightly

notifications:
  email: false

script: travis_wait 30 julia --code-coverage --inline=no -e 'using Pkg; Pkg.build(); Pkg.test(coverage=true)'

jobs:
  include:
    - stage: "Documentation"
      if: type = push AND branch = master AND env(TRAVIS_JULIA_VERSION) = "1.3"
      os: linux
      script:
        - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
                                               Pkg.instantiate()'
        - julia --project=docs/ docs/make.jl
    - stage: "codecov"
      if: type = push AND branch = master AND env(TRAVIS_JULIA_VERSION) = "1.3"
      os: linux
      script:
        - julia -e 'using Pkg;
          Pkg.build(); Pkg.test(coverage=true);
          import Omniscape; cd(joinpath(dirname(pathof(Omniscape)),".."));
          Pkg.add("Coverage");
          using Coverage;
          Codecov.submit(Codecov.process_folder())'

# after_success:
#   - if [[ $TRAVIS_OS_NAME = "linux" ]] && [[ $TRAVIS_JULIA_VERSION = "1.3" ]] && [[ $TRAVIS_BUILD_STAGE_NAME = "Test" ]] && [[ $TRAVIS_BRANCH = "master" ]] && [[ $TRAVIS_EVENT_TYPE = "push" ]]; then
#     julia -e 'using Pkg;
#     import Omniscape; cd(joinpath(dirname(pathof(Omniscape)),".."));
#     Pkg.add("Coverage");
#     using Coverage;
#     Codecov.submit(Codecov.process_folder())'; fi
